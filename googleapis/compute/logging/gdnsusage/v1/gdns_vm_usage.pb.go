// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: google/compute/logging/gdnsusage/v1/gdns_vm_usage.proto

package gdnsusage

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Used for structured payload for reporting Platform Logs
type GdnsVmUsagePlatformLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// source vm's information
	SourceVm *VmInfo `protobuf:"bytes,1,opt,name=source_vm,json=sourceVm,proto3,oneof" json:"source_vm,omitempty"`
	// destination vm's information
	DestinationVm *VmInfo `protobuf:"bytes,2,opt,name=destination_vm,json=destinationVm,proto3,oneof" json:"destination_vm,omitempty"`
	// message that informs users on how to fix the global DNS query that is
	// blocking the zonal DNS migration
	DebugMessage *string `protobuf:"bytes,3,opt,name=debug_message,json=debugMessage,proto3,oneof" json:"debug_message,omitempty"`
	// number of zDNS migration blocking queries sent from source_vm to
	// destination_vm
	QueryCount *int32 `protobuf:"varint,5,opt,name=query_count,json=queryCount,proto3,oneof" json:"query_count,omitempty"`
}

func (x *GdnsVmUsagePlatformLog) Reset() {
	*x = GdnsVmUsagePlatformLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdnsVmUsagePlatformLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdnsVmUsagePlatformLog) ProtoMessage() {}

func (x *GdnsVmUsagePlatformLog) ProtoReflect() protoreflect.Message {
	mi := &file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdnsVmUsagePlatformLog.ProtoReflect.Descriptor instead.
func (*GdnsVmUsagePlatformLog) Descriptor() ([]byte, []int) {
	return file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDescGZIP(), []int{0}
}

func (x *GdnsVmUsagePlatformLog) GetSourceVm() *VmInfo {
	if x != nil {
		return x.SourceVm
	}
	return nil
}

func (x *GdnsVmUsagePlatformLog) GetDestinationVm() *VmInfo {
	if x != nil {
		return x.DestinationVm
	}
	return nil
}

func (x *GdnsVmUsagePlatformLog) GetDebugMessage() string {
	if x != nil && x.DebugMessage != nil {
		return *x.DebugMessage
	}
	return ""
}

func (x *GdnsVmUsagePlatformLog) GetQueryCount() int32 {
	if x != nil && x.QueryCount != nil {
		return *x.QueryCount
	}
	return 0
}

// VM details
type VmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// project id of the vm
	ProjectId *string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3,oneof" json:"project_id,omitempty"`
	// name of the vm
	Vm *string `protobuf:"bytes,2,opt,name=vm,proto3,oneof" json:"vm,omitempty"`
	// zone of the vm
	Zone *string `protobuf:"bytes,3,opt,name=zone,proto3,oneof" json:"zone,omitempty"`
}

func (x *VmInfo) Reset() {
	*x = VmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VmInfo) ProtoMessage() {}

func (x *VmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VmInfo.ProtoReflect.Descriptor instead.
func (*VmInfo) Descriptor() ([]byte, []int) {
	return file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDescGZIP(), []int{1}
}

func (x *VmInfo) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

func (x *VmInfo) GetVm() string {
	if x != nil && x.Vm != nil {
		return *x.Vm
	}
	return ""
}

func (x *VmInfo) GetZone() string {
	if x != nil && x.Zone != nil {
		return *x.Zone
	}
	return ""
}

var File_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto protoreflect.FileDescriptor

var file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDesc = []byte{
	0x0a, 0x37, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x64, 0x6e, 0x73, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x64, 0x6e, 0x73, 0x5f, 0x76, 0x6d, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x2e, 0x67, 0x64, 0x6e, 0x73, 0x75, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x22, 0xd3,
	0x02, 0x0a, 0x16, 0x47, 0x64, 0x6e, 0x73, 0x56, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x12, 0x4d, 0x0a, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x76, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x6c, 0x6f,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x64, 0x6e, 0x73, 0x75, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x56, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x57, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x64, 0x6e, 0x73, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52,
	0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6d, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x03, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x6d, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x6d, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x79, 0x0a, 0x06, 0x56, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x76, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x02, 0x76, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x76, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x42,
	0xfd, 0x01, 0x0a, 0x23, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x67, 0x64, 0x6e, 0x73, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x47, 0x64, 0x6e, 0x73, 0x56, 0x6d, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x2f, 0x67, 0x64, 0x6e, 0x73, 0x75, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x67, 0x64, 0x6e, 0x73, 0x75, 0x73, 0x61, 0x67, 0x65, 0xaa, 0x02, 0x23, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x64, 0x6e, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x23, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x5c, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5c, 0x47, 0x64, 0x6e, 0x73, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x27, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x3a, 0x3a, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x3a, 0x3a, 0x47, 0x64, 0x6e, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDescOnce sync.Once
	file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDescData = file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDesc
)

func file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDescGZIP() []byte {
	file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDescOnce.Do(func() {
		file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDescData)
	})
	return file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDescData
}

var file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_goTypes = []interface{}{
	(*GdnsVmUsagePlatformLog)(nil), // 0: google.compute.logging.gdnsusage.v1.GdnsVmUsagePlatformLog
	(*VmInfo)(nil),                 // 1: google.compute.logging.gdnsusage.v1.VmInfo
}
var file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_depIdxs = []int32{
	1, // 0: google.compute.logging.gdnsusage.v1.GdnsVmUsagePlatformLog.source_vm:type_name -> google.compute.logging.gdnsusage.v1.VmInfo
	1, // 1: google.compute.logging.gdnsusage.v1.GdnsVmUsagePlatformLog.destination_vm:type_name -> google.compute.logging.gdnsusage.v1.VmInfo
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_init() }
func file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_init() {
	if File_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdnsVmUsagePlatformLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_goTypes,
		DependencyIndexes: file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_depIdxs,
		MessageInfos:      file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_msgTypes,
	}.Build()
	File_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto = out.File
	file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_rawDesc = nil
	file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_goTypes = nil
	file_google_compute_logging_gdnsusage_v1_gdns_vm_usage_proto_depIdxs = nil
}
